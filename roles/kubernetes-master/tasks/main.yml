---
- name: Initialize Kubernetes cluster
  shell: |
    kubeadm init \
      --pod-network-cidr={{ k8s_pod_network_cidr }} \
      --service-cidr={{ k8s_service_cidr }} \
      --apiserver-advertise-address={{ api_server_advertise_address }} \
      --control-plane-endpoint={{ k8s_master_hostname | default(ansible_default_ipv4.address) }}:6443 \
      --upload-certs
  register: kubeadm_init
  changed_when: '"Your Kubernetes control-plane has initialized successfully" in kubeadm_init.stdout'
  tags: kubernetes, master

- name: Create .kube directory
  file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  tags: kubernetes, master

- name: Copy admin.conf to user home
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ ansible_user }}/.kube/config
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
    remote_src: yes
  tags: kubernetes, master

- name: Fetch kubeconfig for local use
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: ./kubeconfig
    flat: yes
  tags: kubernetes, master

- name: Extract kubeadm join command
  shell: kubeadm token create --print-join-command
  register: kubeadm_join_command
  changed_when: false
  tags: kubernetes, master

- name: Save join command to file
  copy:
    content: "{{ kubeadm_join_command.stdout }}"
    dest: /tmp/kubeadm_join.sh
    mode: '0755'
  tags: kubernetes, master

- name: Fetch join command to local machine
  fetch:
    src: /tmp/kubeadm_join.sh
    dest: ./kubeadm_join.sh
    flat: yes
  tags: kubernetes, master

- name: Install Flannel network plugin
  command: >
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/.kube/config
  tags: kubernetes, master, network

- name: Wait for flannel to be ready
  shell: |
    kubectl wait --for=condition=ready pod -l app=flannel -n kube-flannel --timeout=300s
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/.kube/config
  tags: kubernetes, master, network

- name: Check master node status
  shell: |
    kubectl get nodes
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/.kube/config
  register: node_status
  changed_when: false
  tags: kubernetes, master

- name: Display node status
  debug:
    var: node_status.stdout_lines
  tags: kubernetes, master

- name: Create backup directory for etcd
  file:
    path: "{{ backup_dir }}"
    state: directory
    mode: '0755'
  tags: kubernetes, master, backup

- name: Create etcd backup script
  template:
    src: etcd_backup.sh.j2
    dest: /usr/local/bin/etcd_backup.sh
    mode: '0750'
  tags: kubernetes, master, backup

- name: Schedule etcd backups
  cron:
    name: "Kubernetes etcd daily backup"
    minute: "0"
    hour: "2"
    job: "/usr/local/bin/etcd_backup.sh"
    state: present
  tags: kubernetes, master, backup
